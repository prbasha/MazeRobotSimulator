<Window x:Class="MazeRobotSimulator.View.MazeRobotSimulatorView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:wpfExtToolKit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:MazeRobotSimulator.View"
        mc:Ignorable="d"
        Title="Maze Robot Simulator" 
        MinHeight="768" 
        MinWidth="1024"
        Height="768" 
        Width="1024">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"></BooleanToVisibilityConverter>
        <Style x:Key="mazeCellStyle" TargetType="{x:Type Grid}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CellType}" Value="Wall">
                    <Setter Property="Background" Value="Black"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CellType}" Value="Passage">
                    <Setter Property="Background" Value="White"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CellRole}" Value="Start">
                    <Setter Property="Background" Value="Green"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CellRole}" Value="End">
                    <Setter Property="Background" Value="Red"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="cellMarkStyle" TargetType="{x:Type Ellipse}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding CellMark}" Value="None">
                    <Setter Property="Fill" Value="Transparent"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CellMark}" Value="Once">
                    <Setter Property="Fill" Value="Blue"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding CellMark}" Value="Twice">
                    <Setter Property="Fill" Value="Red"></Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.10*"></RowDefinition>
            <RowDefinition Height="0.90*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Column="0" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.60*"></ColumnDefinition>
                    <ColumnDefinition Width="0.40*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Viewbox Grid.Column="0" Stretch="Uniform">
                    <Label HorizontalAlignment="Right" VerticalAlignment="Center">WIDTH/HEIGHT (CELLS):</Label>    
                </Viewbox>
                <Viewbox Grid.Column="1" Stretch="Uniform" HorizontalAlignment="Left">
                    <wpfExtToolKit:IntegerUpDown Margin="2,2,2,2" VerticalAlignment="Center" FontSize="18" Minimum="20" Maximum="50" DefaultValue="30" Value="{Binding Maze.ProposedMazeWidthHeightCells, Mode=TwoWay}"></wpfExtToolKit:IntegerUpDown>
                </Viewbox>
            </Grid>
            <Button Grid.Column="1" Grid.Row="0" Margin="2,2,2,2" Background="Pink" Command="{Binding GenerateMazeCommand}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Viewbox>
                            <TextBlock>GENERATE MAZE</TextBlock>
                        </Viewbox>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
            <Button Grid.Column="2" Grid.Row="0" Margin="2,2,2,2" Background="Orange" Command="{Binding ResetMazeCommand}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Viewbox>
                            <TextBlock>RESET MAZE</TextBlock>
                        </Viewbox>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
            <Button Grid.Column="0" Grid.Row="1" Margin="2,2,2,2" Background="LimeGreen" Command="{Binding StartSimulationCommand}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Viewbox>
                            <TextBlock>START</TextBlock>
                        </Viewbox>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
            <GroupBox Grid.Column="1" Grid.Row="1" FontSize="11" Margin="0,-3,0,0" Header="Speed">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.80*"></ColumnDefinition>
                        <ColumnDefinition Width="0.20*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Slider Grid.Column="0" VerticalAlignment="Center" Minimum="1" Maximum="20" TickFrequency="1" TickPlacement="None" IsSnapToTickEnabled="True" Value="{Binding Maze.SimulationSpeed, Mode=TwoWay}"></Slider>
                    <Viewbox Grid.Column="1" Stretch="Uniform">
                        <Label Margin="0,0,0,0" Padding="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14" Content="{Binding Maze.SimulationSpeed, Mode=OneWay}"></Label>
                    </Viewbox>
                </Grid>
            </GroupBox>
            <Button Grid.Column="2" Grid.Row="1" Margin="2,2,2,2" Background="OrangeRed" Command="{Binding StopSimulationCommand}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <Viewbox>
                            <TextBlock>STOP</TextBlock>
                        </Viewbox>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
            <Viewbox Grid.Column="3" Grid.Row="0" Grid.RowSpan="2">
                <TextBlock Text="{Binding Maze.SimulationTime, StringFormat={}{0:hh}:{0:mm}:{0:ss}}"></TextBlock>
            </Viewbox>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"></ColumnDefinition>
                <ColumnDefinition Width="Auto"></ColumnDefinition>
                <ColumnDefinition Width="1*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Viewbox Grid.Column="0" VerticalAlignment="Top" Margin="10,10,10,10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid Grid.Column="0" Grid.Row="0" Background="Black" Margin="1,1,1,1" Width="25"></Grid>
                    <Label Grid.Column="1" Grid.Row="0" Content="MAZE WALL"></Label>
                    <Grid Grid.Column="0" Grid.Row="1" Background="White" Margin="1,1,1,1" Width="25">
                        <Border BorderBrush="Black" BorderThickness="1"></Border>
                    </Grid>
                    <Label Grid.Column="1" Grid.Row="1" Content="MAZE PASSAGE"></Label>
                    <Grid Grid.Column="0" Grid.Row="2" Background="Green" Margin="1,1,1,1" Width="25"></Grid>
                    <Label Grid.Column="1" Grid.Row="2" Content="MAZE START"></Label>
                    <Grid Grid.Column="0" Grid.Row="3" Background="Red" Margin="1,1,1,1" Width="25"></Grid>
                    <Label Grid.Column="1" Grid.Row="3" Content="MAZE END"></Label>
                    <Grid Grid.Column="0" Grid.Row="4" Margin="1,1,1,1" Width="25">
                        <Ellipse Fill="Blue"></Ellipse>
                    </Grid>
                    <Label Grid.Column="1" Grid.Row="4" Content="MARKED ONCE"></Label>
                    <Grid Grid.Column="0" Grid.Row="5" Margin="1,1,1,1" Width="25">
                        <Ellipse Fill="Red"></Ellipse>
                    </Grid>
                    <Label Grid.Column="1" Grid.Row="5" Content="MARKED TWICE"></Label>
                    <Grid Grid.Column="0" Grid.Row="6" Margin="1,1,1,1" Width="25">
                        <Ellipse Fill="Purple"></Ellipse>
                    </Grid>
                    <Label Grid.Column="1" Grid.Row="6" Content="ROBOT"></Label>
                </Grid>
            </Viewbox>
            <ItemsControl Grid.Column="1" 
                      Name="mazeGrid" 
                      Margin="5,5,5,5" 
                      BorderBrush="Black"
                      BorderThickness="3"
                      Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                      ItemsSource="{Binding Maze.MazeCells, Mode=OneWay}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="{Binding Maze.MazeWidthHeightCells, Mode=OneWay}" Rows="{Binding Maze.MazeWidthHeightCells, Mode=OneWay}"></UniformGrid>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid x:Name="mazeCell" Style="{StaticResource mazeCellStyle}">
                            <Ellipse x:Name="cellMark" Style="{StaticResource cellMarkStyle}"></Ellipse>
                            <Ellipse x:Name="robot" Fill="Purple" Visibility="{Binding Path=ContainsRobot, Converter={StaticResource booleanToVisibilityConverter}}"></Ellipse>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </Grid>
</Window>
